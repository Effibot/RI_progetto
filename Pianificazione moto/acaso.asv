clc
clear all
close all
%%
dim=[64,64];
obs=[10,10,2;39,20,3;8,8,3;30,30,4;40,40,1;21,5,1;10,40,5];
div=divisors(dim(1));
cellsize=div(end-2);
robotsize=2;
grid=ones(dim);
for i=1:size(obs,1)
    x=obs(i,1);
    y=obs(i,2);
    r=obs(i,3);
    grid(x,y)=1;
    grid(fix(-r/2)+x-1:fix(r/2)+x+1,fix(-r/2)+y-1:fix(r/2)+y+1)=0;
end
figure,imshow(grid);
fun=@(m,s)choice(m,s);
% @(matrix,dim)choice(matrix,dim)
S=qtdecomp(grid,fun,robotsize);
% S=qtdecomp(grid,0.1,robotsize);
blocks = true(size(S));

for dim = [ 64 32 16 8 4 2]
    numblocks = length(find(S==dim));
    if (numblocks > 0)
        values = repmat(uint8(1),[dim dim numblocks]);
        values(2:dim,2:dim,:) = 0;
        blocks = qtsetblk(blocks,S,dim,values);
        
    end
end
blocks(end,1:end) = 1;
blocks(1:end,end) = 1;
blocks=imcomplement(blocks);
for i=1:size(obs,1)
    x=obs(i,1);
    y=obs(i,2);
    r=obs(i,3);
    blocks(fix(-r/2)+x-1:fix(r/2)+x+1,fix(-r/2)+y-1:fix(r/2)+y+1)=0;
end
figure, imshow(blocks,[])
%% Filling Holes
for dim=[64 32 16 8 4 2]
    [vals,r,c]=qtgetblk(blocks,S,4);
    for i=1:size(r,1)
        x=r(i);
        y=c(i);
        offsetX=size(vals(:,:,i),1);
        offsetY=size(vals(:,:,i),2);
        square=getIdx(x,y,offsetX,offsetY);
        for j=1:size(obs,1)
            if ~isempty(find(ismember(square,[obs(j,1),obs(j,2)],'rows'), 1))
                vals(:,:,i)=ones(size(vals(:,:,i)));
                blocks(x:x+offsetX,y:y+offsetY)=vals(:,:,i);

            end
        end
    end
end
function idx=getIdx(x,y,offsetX,offsetY)
idx=double.empty(0,2);
for i=x:offsetX
   idx=vertcat(idx,[i*ones(1,offsetX);y:y+offsetY]');
end
end
%% Centroid
% bc=regionprops(blocks,'centroid','FilledImage');
%
% centroids = cat(1,bc.Centroid);
% figure
% imshow(blocks)
% hold on
% plot(centroids(:,1),centroids(:,2),'b*')
% hold off
% %%
% J=fill(double(blocks),'holes');
% figure
% imshow(J)

